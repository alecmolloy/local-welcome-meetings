/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/": {
    get: {
      responses: {
        /** OK */
        200: unknown;
      };
    };
  };
  "/profile": {
    get: {
      parameters: {
        query: {
          inserted_at?: parameters["rowFilter.profile.inserted_at"];
          updated_at?: parameters["rowFilter.profile.updated_at"];
          email?: parameters["rowFilter.profile.email"];
          canLeadSessions?: parameters["rowFilter.profile.canLeadSessions"];
          user_id?: parameters["rowFilter.profile.user_id"];
          firstname?: parameters["rowFilter.profile.firstname"];
          lastname?: parameters["rowFilter.profile.lastname"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["profile"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** profile */
          profile?: definitions["profile"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          inserted_at?: parameters["rowFilter.profile.inserted_at"];
          updated_at?: parameters["rowFilter.profile.updated_at"];
          email?: parameters["rowFilter.profile.email"];
          canLeadSessions?: parameters["rowFilter.profile.canLeadSessions"];
          user_id?: parameters["rowFilter.profile.user_id"];
          firstname?: parameters["rowFilter.profile.firstname"];
          lastname?: parameters["rowFilter.profile.lastname"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          inserted_at?: parameters["rowFilter.profile.inserted_at"];
          updated_at?: parameters["rowFilter.profile.updated_at"];
          email?: parameters["rowFilter.profile.email"];
          canLeadSessions?: parameters["rowFilter.profile.canLeadSessions"];
          user_id?: parameters["rowFilter.profile.user_id"];
          firstname?: parameters["rowFilter.profile.firstname"];
          lastname?: parameters["rowFilter.profile.lastname"];
        };
        body: {
          /** profile */
          profile?: definitions["profile"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/room": {
    get: {
      parameters: {
        query: {
          /** Human readable name. */
          name?: parameters["rowFilter.room.name"];
          /** URL path to access this room. */
          slug?: parameters["rowFilter.room.slug"];
          /** Notion property. */
          slideshowName?: parameters["rowFilter.room.slideshowName"];
          /** Notion ID. */
          currentSlideIndex?: parameters["rowFilter.room.currentSlideIndex"];
          timerState?: parameters["rowFilter.room.timerState"];
          timerStartTime?: parameters["rowFilter.room.timerStartTime"];
          timerDuration?: parameters["rowFilter.room.timerDuration"];
          wherebyMeetingId?: parameters["rowFilter.room.wherebyMeetingId"];
          wherebyStartDate?: parameters["rowFilter.room.wherebyStartDate"];
          wherebyEndDate?: parameters["rowFilter.room.wherebyEndDate"];
          wherebyRoomUrl?: parameters["rowFilter.room.wherebyRoomUrl"];
          wherebyHostRoomUrl?: parameters["rowFilter.room.wherebyHostRoomUrl"];
          id?: parameters["rowFilter.room.id"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["room"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** room */
          room?: definitions["room"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          /** Human readable name. */
          name?: parameters["rowFilter.room.name"];
          /** URL path to access this room. */
          slug?: parameters["rowFilter.room.slug"];
          /** Notion property. */
          slideshowName?: parameters["rowFilter.room.slideshowName"];
          /** Notion ID. */
          currentSlideIndex?: parameters["rowFilter.room.currentSlideIndex"];
          timerState?: parameters["rowFilter.room.timerState"];
          timerStartTime?: parameters["rowFilter.room.timerStartTime"];
          timerDuration?: parameters["rowFilter.room.timerDuration"];
          wherebyMeetingId?: parameters["rowFilter.room.wherebyMeetingId"];
          wherebyStartDate?: parameters["rowFilter.room.wherebyStartDate"];
          wherebyEndDate?: parameters["rowFilter.room.wherebyEndDate"];
          wherebyRoomUrl?: parameters["rowFilter.room.wherebyRoomUrl"];
          wherebyHostRoomUrl?: parameters["rowFilter.room.wherebyHostRoomUrl"];
          id?: parameters["rowFilter.room.id"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          /** Human readable name. */
          name?: parameters["rowFilter.room.name"];
          /** URL path to access this room. */
          slug?: parameters["rowFilter.room.slug"];
          /** Notion property. */
          slideshowName?: parameters["rowFilter.room.slideshowName"];
          /** Notion ID. */
          currentSlideIndex?: parameters["rowFilter.room.currentSlideIndex"];
          timerState?: parameters["rowFilter.room.timerState"];
          timerStartTime?: parameters["rowFilter.room.timerStartTime"];
          timerDuration?: parameters["rowFilter.room.timerDuration"];
          wherebyMeetingId?: parameters["rowFilter.room.wherebyMeetingId"];
          wherebyStartDate?: parameters["rowFilter.room.wherebyStartDate"];
          wherebyEndDate?: parameters["rowFilter.room.wherebyEndDate"];
          wherebyRoomUrl?: parameters["rowFilter.room.wherebyRoomUrl"];
          wherebyHostRoomUrl?: parameters["rowFilter.room.wherebyHostRoomUrl"];
          id?: parameters["rowFilter.room.id"];
        };
        body: {
          /** room */
          room?: definitions["room"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/shiftpattern": {
    get: {
      parameters: {
        query: {
          name?: parameters["rowFilter.shiftpattern.name"];
          required_people?: parameters["rowFilter.shiftpattern.required_people"];
          room_id?: parameters["rowFilter.shiftpattern.room_id"];
          id?: parameters["rowFilter.shiftpattern.id"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["shiftpattern"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** shiftpattern */
          shiftpattern?: definitions["shiftpattern"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          name?: parameters["rowFilter.shiftpattern.name"];
          required_people?: parameters["rowFilter.shiftpattern.required_people"];
          room_id?: parameters["rowFilter.shiftpattern.room_id"];
          id?: parameters["rowFilter.shiftpattern.id"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          name?: parameters["rowFilter.shiftpattern.name"];
          required_people?: parameters["rowFilter.shiftpattern.required_people"];
          room_id?: parameters["rowFilter.shiftpattern.room_id"];
          id?: parameters["rowFilter.shiftpattern.id"];
        };
        body: {
          /** shiftpattern */
          shiftpattern?: definitions["shiftpattern"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
}

export interface definitions {
  profile: {
    inserted_at: string;
    updated_at: string;
    /**
     * Note:
     * This is a Primary Key.<pk/>
     */
    email: string;
    canLeadSessions: boolean;
    user_id?: string;
    firstname?: string;
    lastname?: string;
  };
  room: {
    /** Human readable name. */
    name: string;
    /** URL path to access this room. */
    slug: string;
    /** Notion property. */
    slideshowName: string;
    /** Notion ID. */
    currentSlideIndex: number;
    timerState?: string;
    timerStartTime: string;
    timerDuration: number;
    wherebyMeetingId?: string;
    wherebyStartDate?: string;
    wherebyEndDate?: string;
    wherebyRoomUrl?: string;
    wherebyHostRoomUrl?: string;
    /**
     * Note:
     * This is a Primary Key.<pk/>
     */
    id: string;
  };
  shiftpattern: {
    name: string;
    required_people: number;
    /**
     * Note:
     * This is a Foreign Key to `room.id`.<fk table='room' column='id'/>
     */
    room_id: string;
    /**
     * Note:
     * This is a Primary Key.<pk/>
     */
    id: string;
  };
}

export interface parameters {
  /** Preference */
  preferParams: "params=single-object";
  /** Preference */
  preferReturn: "return=representation" | "return=minimal" | "return=none";
  /** Preference */
  preferCount: "count=none";
  /** Filtering Columns */
  select: string;
  /** On Conflict */
  on_conflict: string;
  /** Ordering */
  order: string;
  /** Limiting and Pagination */
  range: string;
  /** Limiting and Pagination */
  rangeUnit: string;
  /** Limiting and Pagination */
  offset: string;
  /** Limiting and Pagination */
  limit: string;
  /** profile */
  "body.profile": definitions["profile"];
  "rowFilter.profile.inserted_at": string;
  "rowFilter.profile.updated_at": string;
  "rowFilter.profile.email": string;
  "rowFilter.profile.canLeadSessions": string;
  "rowFilter.profile.user_id": string;
  "rowFilter.profile.firstname": string;
  "rowFilter.profile.lastname": string;
  /** room */
  "body.room": definitions["room"];
  /** Human readable name. */
  "rowFilter.room.name": string;
  /** URL path to access this room. */
  "rowFilter.room.slug": string;
  /** Notion property. */
  "rowFilter.room.slideshowName": string;
  /** Notion ID. */
  "rowFilter.room.currentSlideIndex": string;
  "rowFilter.room.timerState": string;
  "rowFilter.room.timerStartTime": string;
  "rowFilter.room.timerDuration": string;
  "rowFilter.room.wherebyMeetingId": string;
  "rowFilter.room.wherebyStartDate": string;
  "rowFilter.room.wherebyEndDate": string;
  "rowFilter.room.wherebyRoomUrl": string;
  "rowFilter.room.wherebyHostRoomUrl": string;
  "rowFilter.room.id": string;
  /** shiftpattern */
  "body.shiftpattern": definitions["shiftpattern"];
  "rowFilter.shiftpattern.name": string;
  "rowFilter.shiftpattern.required_people": string;
  "rowFilter.shiftpattern.room_id": string;
  "rowFilter.shiftpattern.id": string;
}

export interface operations {}

export interface external {}
